# Generated by Django 2.1.2 on 2019-07-03 02:35

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('pleethai', '0004_auto_20190610_1415'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('thai', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pleethai_taggeditem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pleethai_taggeditem_items', to='pleethai.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='word',
            name='tags',
            field=models.CharField(blank=True, max_length=511, null=True),
        ),
        migrations.AlterField(
            model_name='constituent',
            name='word_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pleethai.SysWordJapanese'),
        ),
        migrations.AddField(
            model_name='syswordjapanese',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='pleethai.TaggedItem', to='pleethai.Tag', verbose_name='Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='taggeditem',
            unique_together={('content_type', 'object_id', 'tag')},
        ),
        migrations.AlterIndexTogether(
            name='taggeditem',
            index_together={('content_type', 'object_id')},
        ),
    ]
